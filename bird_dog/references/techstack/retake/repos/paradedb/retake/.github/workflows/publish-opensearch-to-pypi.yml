# workflows/publish-opensearch-to-pypi.yml
#
# OpenSearch: Publish to PyPi
# Publish the Retake fork of the OpenSearch Python client as a pip package to PyPi.

name: Publishing

on:
  push:
    branches:
      - main
      - staging
      - dev
    paths:
      - "submodules/opensearch-py/**"
      - ".github/workflows/publish-opensearch-to-pypi.yml"
  workflow_dispatch:

# This guarantees that if you push many commits to the same PR, only the latest
# commit will get run (others get cancelled)
concurrency:
  group: publish-opensearch-to-pypi-dockerhub-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  publish-opensearch-to-pypi:
    name: Publish OpenSearch to PyPi
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v3

      - name: Initialize Submodules
        run: git submodule update --init

      - name: Set Up Python
        uses: actions/setup-python@v3

      - name: Set Environment
        id: env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
            echo "Using prod configuration..."
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "Using staging configuration..."
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
            echo "Using dev configuration..."
          fi

      - name: Install Dependencies
        run: pip install setuptools wheel twine

      - name: Build and Test OpenSearch
        working-directory: submodules/opensearch-py
        run: |
          python setup.py sdist bdist_wheel
          cd dist
          twine check *

      # Don't forget to manually update the version in opensearch-py/opensearchpy/_version.py, as per
      # OpenSearch's standard release process
      - name: Publish to PyPi (prod only)
        if: steps.env.outputs.environment == 'prod'
        working-directory: submodules/opensearch-py/dist
        run: twine upload * -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_PASSWORD }} --verbose
